{% import 'common.yml.j2' as common %}

{%- block name -%}
# Template is at:    .github/templates/ios_ci_workflow.yml.j2
# Generation script: .github/scripts/generate_ci_workflows.py
name: !{{ build_environment }}
{%- endblock %}

on:
  pull_request:
    types: [opened, synchronize, reopened, !{{ ciflow_config.trigger_action }}]

{%- if is_scheduled %}
  schedule:
    - cron: !{{ is_scheduled }}
{%- else %}
  push:
    branches:
      - master
      - release/*
{%- endif %}
  workflow_dispatch:

env:
  IN_CI: 1
  IS_GHA: 1

# Parameters from upstream job
#  environment:
#    BUILD_ENVIRONMENT: << parameters.build_environment >>
#    IOS_ARCH: << parameters.ios_arch >>
#    IOS_PLATFORM: << parameters.ios_platform >>
#    SELECTED_OP_LIST: << parameters.op_list >>
#    USE_PYTORCH_METAL: << parameters.use_metal >>
#    BUILD_LITE_INTERPRETER: << parameters.lite_interpreter >>
#    USE_COREML_DELEGATE: << parameters.use_coreml >>

jobs:
!{{ common.ciflow_should_run_job(ciflow_config) }}
{% block build +%}
  build:
    runs-on: macos-10.15
    needs: [!{{ ciflow_config.root_job_name }}]
    env:
      JOB_BASE_NAME: !{{ build_environment }}-build
      IOS_CERT_KEY_2022: ${{ secrets.IOS_CERT_KEY_2022 }}
      IOS_SIGN_KEY_2022: ${{ secrets.IOS_SIGN_KEY_2022 }}
    steps:
      !{{ common.checkout_pytorch("recursive") }}
      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.8
      - name: Install ios / conda Dependencies
        run: |
          # Install dependencies
          brew install libtool
          conda install numpy ninja pyyaml mkl mkl-include setuptools cmake cffi requests typing_extensions --yes
      - name: Run Fastlane
        run: |
          set -e
          cd ios/TestApp
          # install fastlane
          sudo gem install bundler && bundle install
          # install certificates
          echo "${IOS_CERT_KEY_2022}" >> cert.txt
          base64 --decode cert.txt -o Certificates.p12
          rm cert.txt
          bundle exec fastlane install_root_cert
          bundle exec fastlane install_dev_cert
          # install the provisioning profile
          PROFILE=PyTorch_CI_2022.mobileprovision
          PROVISIONING_PROFILES=~/Library/MobileDevice/Provisioning\ Profiles
          mkdir -pv "${PROVISIONING_PROFILES}"
          cd "${PROVISIONING_PROFILES}"
          echo "${IOS_SIGN_KEY_2022}" >> cert.txt
          base64 --decode cert.txt -o ${PROFILE}
          rm cert.txt
      - name: Build
        run: |
          set -e
          export TCLLIBPATH="/usr/local/lib"
          # export
          export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname "$(which conda)")/../"}
          bash scripts/build_ios.sh
{% endblock +%}
